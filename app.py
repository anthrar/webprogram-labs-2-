from flask import Flask, redirect, url_for, render_template
app = Flask(__name__)

@app.route("/")
@app.route("/index")
def start():
    return redirect("/menu", code=302)

@app.route("/menu")
def menu():
    return """
<!doctype html>
<html>
    <head>
        <title>Красов Павел Андреевич, лабораторная 1</title>
    </head>
    <body>
        <header>
            НГТУ, ФБ, WEB-программирование, часть 2
        </header>

        <h1>web-сервер на flask</h1>

        <h2>Меню</h2>
        <ul>
        <li><a href = "/lab1">Первая лабораторная</a></li>
        </ul>

        <footer>
            &copy; Красов Павел, ФБИ-23, 3 курс, 2024
        </footer>
    </body>
</html>
"""

@app.route("/lab1")
def lab1():
    return """
<!doctype html>
<html>
    <head>
        <title>Красов Павел Андреевич, лабораторная 1</title>
    </head>
    <body>
        <header>
            НГТУ, ФБ, лабораторная работа 1
        </header>

        <h1>web-сервер на flask</h1>

        <p>Flask — фреймворк для создания веб-приложений на языке
        программирования Python, использующий набор инструментов
        Werkzeug, а также шаблонизатор Jinja2. Относится к категории так
        называемых микрофреймворков — минималистичных каркасов
        веб-приложений, сознательно предоставляющих лишь самые базовые возможности.
        </p>

        <ol>
        <li><a href = "/menu">Меню</a></li>
        </ol>

        <h2>Реализованные руты</h2>
        <ul>
        <li><a href = "/lab1/oak">Дуб</a></li>
        <li><a href = "/lab1/student">Студент</a></li>
        <li><a href = "/lab1/python">Python</a></li>
        <li><a href = "/lab1/legend">Легенда о девятихвостой лисе</a></li>
        </ul>

        <footer>
            &copy; Красов Павел, ФБИ-23, 3 курс, 2024
        </footer>
    </body>
</html>
"""

@app.route("/lab1/oak")
def oak():
    return '''
<!doctype html>
<html>
    <head>
        <title>Красов Павел Андреевич, лабораторная 1</title>
            <link rel="stylesheet" type="text/css" href="''' + url_for('static', filename = 'lab1.css') + ''' " />
    </head>
    <body>
        <header>
            НГТУ, ФБ, лабораторная работа 1
        </header>

        <div class="oak">
            <h1>Дуб</h1>
            <img src="''' + url_for('static', filename = 'oak.jpg') + ''' ">
        </div>

        <footer>
            &copy; Красов Павел, ФБИ-23, 3 курс, 2024
        </footer>
    </body>
</html>
'''

@app.route("/lab1/student")
def student():
    return '''
<!doctype html>
<html>
    <head>
        <title>Красов Павел Андреевич, лабораторная 1</title>
        <link rel="stylesheet" type="text/css" href="''' + url_for('static', filename = 'lab1.css') + ''' " />
    </head>
    <body>
        <header>
            НГТУ, ФБ, лабораторная работа 1
        </header>

        <p>Красов Павел Андреевич</p>
            <img src="''' + url_for('static', filename = 'лого НГТУ.jpeg') + ''' ">

        <footer>
            &copy; Красов Павел, ФБИ-23, 3 курс, 2024
        </footer>
    </body>
</html>
'''

@app.route("/lab1/python")
def python():
    return '''
<!doctype html>
<html>
    <head>
        <title>Красов Павел Андреевич, лабораторная 1</title>
        <link rel="stylesheet" type="text/css" href="''' + url_for('static', filename = 'lab1.css') + ''' " />
    </head>
    <body>
        <header>
            НГТУ, ФБ, лабораторная работа 1
        </header>

        <h1>История</h1>
        <p>Задумка по реализации языка появилась в конце 1980-х годов, а разработка его реализации
        началась в 1989 году сотрудником голландского института CWI Гвидо ван Россумом. Для 
        распределённой операционной системы Amoeba требовался расширяемый скриптовый язык, и Гвидо
        начал разрабатывать Python на досуге, позаимствовав некоторые наработки для языка ABC. В 
        феврале 1991 года Гвидо опубликовал исходный текст в группе новостей alt.sources. С самого
        начала Python проектировался как объектно-ориентированный язык.</p>

        <p>Гвидо ван Россум назвал язык в честь популярного британского комедийного телешоу 1970-х
        «Летающий цирк Монти Пайтона», поскольку автор был поклонником этого телешоу, как и многие
        другие разработчики того времени, а в самом шоу прослеживалась некая параллель с миром 
        компьютерной техники.</p>

        <p>Наличие дружелюбного, отзывчивого сообщества пользователей считается, наряду с дизайнерской
        интуицией Гвидо, одним из факторов успеха Python. Развитие языка происходит согласно чётко 
        регламентированному процессу создания, обсуждения, отбора и реализации документов PEP 
        (англ. Python Enhancement Proposal) — предложений по развитию Python.</p>
        <p>

            <img src="''' + url_for('static', filename = 'pechal.jpg') + ''' ">
        </p>

        <footer>
            &copy; Красов Павел, ФБИ-23, 3 курс, 2024
        </footer>
    </body>
</html>
'''

@app.route("/lab1/legend")
def legend():
    return '''
<!doctype html>
<html>
    <head>
        <title>Красов Павел Андреевич, лабораторная 1</title>
        <link rel="stylesheet" type="text/css" href="''' + url_for('static', filename = 'lab1.css') + ''' " />
    </head>
    <body>
        <header>
            НГТУ, ФБ, лабораторная работа 1
        </header>

        <h1>Легенды</h1>
        <p>Истории о Тамамо-но-Маэ, легендарном духе-лисе, появляются в период Муромати как 
        отогизоси (прозаические повествования), а также упоминаются Ториямой Сэкиэном в Konjaku 
        Hyakki Shūi . Затем фольклор периода Эдо объединил легенду с похожими зарубежными 
        историями о духах-лисах, развращающих правителей и вызывающих хаос на их территориях.</p>

        <p>В истории, рассказанной Хокусаем , созданной в период Эдо , девятихвостая лиса впервые 
        появилась в Китае и овладела Дацзи , наложницей последнего правителя династии Шан, короля
        Чжоу . Она околдовала короля и навлекла на себя царство террора, которое привело к 
        восстанию, положившему конец династии Шан. Дух лисы бежал в Магадху Тяньчжу (древняя Индия)
        и стал леди Каё, наложницей наследного принца Бандзоку их, заставив его отрубить головы 
        тысяче мужчин. Затем он был снова побежден и бежал из страны. Та же лиса вернулась в Китай
        около 780 г. до н. э. и, как говорят, вселилась в Бао Си , наложницу царя Ю династии Чжоу.
        Она была снова изгнана человеческими военными силами.</p>

        <p>
            <img src="''' + url_for('static', filename = 'тамамо.jpg') + ''' ">
        </p>

        <footer>
            &copy; Красов Павел, ФБИ-23, 3 курс, 2024
        </footer>
    </body>
</html>
'''

@app.route("/lab2/example")
def example():
    name = 'Павел'
    number = '2'
    group = 'ФБИ-23'
    course = '3'
    fruits = [
        {'name': 'манго', 'price': 100},
        {'name': 'арбузы', 'price': 120},
        {'name': 'бананы', 'price': 140},
        {'name': 'яблоки', 'price': 80}, 
        {'name': 'персики', 'price': 96}
    ]
    books = [
        {'author': 'Харлан Элисон','naming':'У меня нет рта, но я должен кричать', 'genre': 'постапокалиптика', 'pages': 10},
        {'author': 'Кормак Маккарти','naming':'Кровавый меридиан', 'genre': 'Вестерн', 'pages': 480},
        {'author': 'Дж. М. Кёсемен','naming':'Все грядущие дни', 'genre': 'Научная фантастика', 'pages': 308},
        {'author': 'Дж. К. Роулинг','naming':'Гарри Поттер и Кубок Огня', 'genre': 'Фэнтези, драма', 'pages': 704},
        {'author': 'Дрю Карпишин','naming':'Звёздные войны. Старая Республика: Реван', 'genre': 'Научная фантастика', 'pages': 298},
        {'author': 'Джордж Оруэлл','naming':'Скотный двор', 'genre': 'антиутопия, сатира', 'pages': 256},
        {'author': 'Джордж Оруэлл','naming':'1984', 'genre': 'антиутопия', 'pages': 320},
        {'author': 'Тимоти Зан','naming':'Траун', 'genre': 'Героическое зарубежное фэнтези ', 'pages': 480},
        {'author': 'Стивен Кинг','naming':'Кладбище Домашних животных', 'genre': 'Ужасы', 'pages': 373},
        {'author': 'Дж.Р.Р.Толкин','naming':'Сильмариллион', 'genre': 'Повесть', 'pages': 365}
    ]
    return render_template('example.html', name=name, number=number, group=group, course=course, fruits=fruits, books=books)

@app.route('/lab2/')
def lab2():
    return render_template('lab2.html')

@app.route('/lab2/creatures')
def creatures():
    monsters = [
        {'name': 'Грифон', 'pic': 'грифон.jpeg', 'description': '''
            Грифоны — противоречивые существа, одновременно объединяющие Небеса и Землю.
         '''},
         {'name': 'Минотавр', 'pic': 'минотавр.jpg', 'description': '''
            Минота́вр  — по греческому преданию, чудовище с телом человека и головой быка.
         '''},
         {'name': 'Циклоп', 'pic': 'циклоп.jpg', 'description': '''
            Циклопы — одноглазые монстры, в разных версиях божественные существа или либо отдельный народ.
         '''},
         {'name': 'Бафомет', 'pic': 'бафомет.jpeg', 'description': '''
            Бафомет - божество знаний и мудрости у эзотериков и оккультистов.
         '''},
         {'name': 'Импундулу', 'pic': 'импундулу.jpeg', 'description': '''
            Импундулу — птица размером с человека, с мощными крыльями, из кончиков которых
            вылетают молнии, миф о которой распространен в Южной Африке
         '''}
    ]
    return render_template('creatures.html', monsters=monsters)